{"version":3,"sources":["components/Tasks/Tasks.module.css","components/ToDoListWrapper/ToDoListWrapper.module.css","components/NewTask/NewTask.module.css","components/EachTaskInList/EachTaskInList.module.css","components/ToDoListWrapper/back.png","components/NewTask/NewTask.jsx","actions.js","store.js","components/NewTask/NewTaskContainer.jsx","components/EachTaskInList/EachTaskInList.jsx","components/EachTaskInList/EachTaskInListContainer.jsx","components/Tasks/Tasks.jsx","components/Tasks/TasksContainer.jsx","components/ToDoListWrapper/ToDoListWrapper.jsx","components/ToDoListWrapper/ToDoListWrapperContainer.jsx","App.js","index.js"],"names":["module","exports","NewTask","enterHandler","catchInputChanges","newTaskInputValue","className","classes","newTaskInput","onKeyDown","onChange","value","INPUT_TASK_VALUE_CHANGED","REMOVE_TASK","ADD_TASK","initialState","newTaskCreated","maxId","localStorage","getItem","tasks","JSON","parse","checkIsInputValueContainOnlySpaces","inputValue","length","test","store","createStore","state","action","type","Object","assign","scrollTasksListBottom","document","querySelector","tasksWrapper","scrollTop","scrollHeight","addEventListener","setTimeout","removeEventListener","isSpacesInInput","data","currentMaxId","setItem","newTaskToStorage","id","itemsArray","stringify","enterTyped","tasksList","stateCopy","forEach","taskObj","index","splice","removeTaskActionCreator","NewTaskContainer","connect","dispatch","event","code","keyCode","target","parentNode","getAttribute","currentValue","EachTaskInList","removeTask","task","onClick","EachTaskInListContainer","this","props","taskValue","React","Component","Tasks","TasksContainer","map","ToDoListWrapper","src","logo","alt","wrapper","ToDoListWrapperContainer","App","basename","process","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8c71e6b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasksList\":\"Tasks_tasksList__2gITH\",\"tasksWrapper\":\"Tasks_tasksWrapper__3F3lm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ToDoListWrapper_wrapper__2aI7p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newTaskInput\":\"NewTask_newTaskInput__2kz-n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"EachTaskInList_task__3aaqC\"};","export default __webpack_public_path__ + \"static/media/back.1fa88825.png\";","import classes from \"./NewTask.module.css\";\r\nimport React from \"react\";\r\n\r\nconst NewTask = ({ enterHandler, catchInputChanges, newTaskInputValue }) => {\r\n    return (\r\n        <div className={classes.newTaskInput}>\r\n            <input\r\n                onKeyDown={enterHandler}\r\n                onChange={catchInputChanges}\r\n                value={newTaskInputValue}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewTask;\r\n","export const INPUT_TASK_VALUE_CHANGED = 'INPUT_TASK_VALUE_CHANGED';\r\nexport const REMOVE_TASK = 'REMOVE_TASK';\r\nexport const ADD_TASK = 'ADD_TASK';\r\n","import { createStore } from 'redux';\r\nimport { INPUT_TASK_VALUE_CHANGED, REMOVE_TASK, ADD_TASK } from './actions'; // these are actions\r\n\r\nconst initialState = {\r\n    newTaskInputValue: '',\r\n    newTaskCreated: 'false',\r\n    maxId: localStorage.getItem('itemsMaxId_1'),\r\n    tasks: localStorage.getItem('items') !== 'undefined' ? JSON.parse(localStorage.getItem('items')) : []\r\n};\r\n\r\nfunction checkIsInputValueContainOnlySpaces(inputValue) {\r\n    if (inputValue && inputValue.length > 0) {\r\n        let pattern = /^[\\s]+$/;\r\n        if (!pattern.test(inputValue)) {\r\n            return true;\r\n        }\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\n// reducer function, which get action & return changed state\r\n// (currentState, action) => newState\r\n// Редуктор принимает два аргумента - состояние и действие - и возвращает новое состояние.\r\nfunction toDoListReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case INPUT_TASK_VALUE_CHANGED:\r\n            return Object.assign({}, state, { // возвращаю копию стэйта\r\n                ...state,\r\n                newTaskInputValue: action.newTaskInputValue\r\n            });\r\n        case ADD_TASK:\r\n            function scrollTasksListBottom() {\r\n                document.querySelector(`.${action.tasksWrapper}`).scrollTop =\r\n                    document.querySelector(`.${action.tasksWrapper}`).scrollHeight;\r\n            }\r\n            document.querySelector(`.${action.tasksWrapper}`).addEventListener('scroll', scrollTasksListBottom);\r\n            scrollTasksListBottom();\r\n            setTimeout(() => {\r\n                document.querySelector(`.${action.tasksWrapper}`).removeEventListener('scroll', scrollTasksListBottom);\r\n            }, 1000);\r\n            const isSpacesInInput = checkIsInputValueContainOnlySpaces(state.newTaskInputValue);\r\n            if (isSpacesInInput) {\r\n                const currentMaxId = +localStorage.getItem('itemsMaxId_1');\r\n                localStorage.setItem('itemsMaxId_1', currentMaxId + 1);\r\n\r\n                let data;\r\n\r\n                if (localStorage.getItem('items')) {\r\n                    data = (localStorage.getItem('items') !== 'undefined')\r\n                        && (localStorage.getItem('items') !== 'null')\r\n                        ? JSON.parse(localStorage.getItem('items'))\r\n                        : [];\r\n\r\n                    const newTaskToStorage = [...data, {\r\n                        id: currentMaxId + 1,\r\n                        value: state.newTaskInputValue\r\n                    }];\r\n\r\n                    let itemsArray = newTaskToStorage;\r\n                    localStorage.setItem('items', JSON.stringify(itemsArray));\r\n                } else {\r\n                    data = [];\r\n\r\n                    const newTaskToStorage = [...data, {\r\n                        id: currentMaxId + 1,\r\n                        value: state.newTaskInputValue\r\n                    }];\r\n\r\n                    let itemsArray = newTaskToStorage;\r\n                    localStorage.setItem('items', JSON.stringify(itemsArray));\r\n                }\r\n\r\n                return Object.assign({}, state, { // возвращаю копию стэйта\r\n                    ...state,\r\n                    newTaskCreated: 'true',\r\n                    newTaskInputValue: '',\r\n                    enterTyped: true,\r\n                    maxId: currentMaxId + 1,\r\n                    tasks: [...data, {\r\n                        id: currentMaxId + 1,\r\n                        value: state.newTaskInputValue\r\n                    }]\r\n                });\r\n            } else {\r\n                return false;\r\n            }\r\n        case REMOVE_TASK:\r\n            const tasksList = localStorage.getItem('items') !== 'undefined' ? JSON.parse(localStorage.getItem('items')) : [];\r\n            const stateCopy = state.tasks;\r\n\r\n            tasksList && tasksList.forEach((taskObj, index) => {\r\n                if (taskObj.id == action.id) {\r\n                    tasksList && tasksList.splice(index, 1);\r\n                    if (stateCopy && stateCopy.length === 0) {\r\n                        localStorage.setItem('itemsMaxId_1', 0);\r\n                    } else if (tasksList) {\r\n                        localStorage.setItem('items', JSON.stringify(tasksList));\r\n                    }\r\n                }\r\n            });\r\n            return Object.assign({}, state, { // возвращаю копию стэйта\r\n                ...state,\r\n                maxId: localStorage.getItem('itemsMaxId_1'),\r\n                tasks: localStorage.getItem('items') !== 'undefined' ? JSON.parse(localStorage.getItem('items')) : []\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst store = createStore(toDoListReducer, initialState);\r\n\r\nexport const catchInputChangesActionCreator = (newTaskInputValue) => { // action creator\r\n    return {\r\n        type: INPUT_TASK_VALUE_CHANGED,\r\n        newTaskInputValue: newTaskInputValue\r\n    }\r\n};\r\n\r\nexport const removeTaskActionCreator = (id) => { // action creator\r\n    return {\r\n        type: REMOVE_TASK,\r\n        id: id\r\n    }\r\n};\r\n\r\nexport const addTaskByEnterActionCreator = (id, tasksWrapper) => { // action creator\r\n    return {\r\n        type: ADD_TASK,\r\n        id: id,\r\n        tasksWrapper: tasksWrapper\r\n    }\r\n};\r\n\r\nexport default store;\r\n","import NewTask from \"./NewTask\";\r\nimport { addTaskByEnterActionCreator, catchInputChangesActionCreator } from \"./../../store\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newTaskInputValue: state.newTaskInputValue\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        enterHandler: event => {\r\n            if (event.code === 'Enter' || event.keyCode === 13) {\r\n                return dispatch(addTaskByEnterActionCreator(event.target.parentNode.getAttribute('id'),\r\n                    event.target.parentNode.parentNode.getAttribute('class')));\r\n            }\r\n        },\r\n        catchInputChanges: event => {\r\n            const currentValue = event.target.value;\r\n            return dispatch(catchInputChangesActionCreator(currentValue));\r\n        }\r\n    }\r\n}\r\n\r\nconst NewTaskContainer = connect(mapStateToProps, mapDispatchToProps)(NewTask);\r\n\r\nexport default NewTaskContainer;\r\n","import classes from \"./EachTaskInList.module.css\";\r\nimport React from \"react\";\r\n\r\nconst EachTaskInList = ({ id, value, removeTask }) => {\r\n    return (\r\n        <div className={classes.task} id={id}>\r\n            <span>{value}</span>\r\n            <button onClick={event => removeTask(event)}>x</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EachTaskInList;\r\n","import EachTaskInList from \"./EachTaskInList\";\r\nimport { removeTaskActionCreator } from \"./../../store\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = function (state) {\r\n    return {\r\n        id: state.maxId,\r\n        value: state.newTaskInputValue\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        removeTask: event => {\r\n            dispatch(removeTaskActionCreator(event.target.parentNode.getAttribute('id')));\r\n        }\r\n    }\r\n}\r\n\r\nclass EachTaskInListContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <EachTaskInList\r\n                    id={this.props.taskValue.id}\r\n                    value={this.props.taskValue.value}\r\n                    removeTask={this.props.removeTask}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EachTaskInListContainer);\r\n","import EachTaskInListContainer from '../EachTaskInList/EachTaskInListContainer';\r\nimport React from \"react\";\r\n\r\nconst Tasks = ({ removeTask, taskValue }) => {\r\n    return (\r\n        <div>\r\n            <EachTaskInListContainer\r\n                removeTask={removeTask}\r\n                taskValue={taskValue}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks;\r\n","import classes from \"./Tasks.module.css\";\r\nimport Tasks from './Tasks';\r\nimport React from \"react\";\r\n\r\nconst TasksContainer = ({ removeTask }) => {\r\n    const tasksList = localStorage.getItem('items') !== 'undefined' ? JSON.parse(localStorage.getItem('items')) : [];\r\n    return (\r\n        <div className={classes.tasksWrapper}>\r\n            { tasksList && tasksList.map(task => {\r\n                return (\r\n                    <div className={classes.tasksList} >\r\n                        <Tasks\r\n                            removeTask={removeTask}\r\n                            taskValue={task}\r\n                        />\r\n                    </div>\r\n                )\r\n            })}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default TasksContainer;\r\n","import classes from \"./ToDoListWrapper.module.css\";\r\nimport logo from './back.png';\r\nimport NewTaskContainer from '../NewTask/NewTaskContainer';\r\nimport TasksContainer from '../Tasks/TasksContainer';\r\nimport React from \"react\";\r\n\r\nconst ToDoListWrapper = ({ state, removeTask, id, onChange }) => {\r\n    return (\r\n        <div>\r\n            <div><img src={logo} className=\"App-logo\" alt=\"logo\" /></div>\r\n            <div className={classes.wrapper}>\r\n                <NewTaskContainer />\r\n                <TasksContainer\r\n                    dispatch={onChange}\r\n                    state={state}\r\n                    removeTask={removeTask}\r\n                    key={id}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoListWrapper;\r\n","import ToDoListWrapper from \"./ToDoListWrapper\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeTaskActionCreator } from \"../../store\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newTaskCreated: state.newTaskCreated,\r\n        id: state.maxId,\r\n        tasks: state.tasks\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        removeTask: id => {\r\n            dispatch(removeTaskActionCreator(id));\r\n        }\r\n    }\r\n}\r\n\r\nconst ToDoListWrapperContainer = connect(mapStateToProps, mapDispatchToProps)(ToDoListWrapper);\r\n\r\nexport default ToDoListWrapperContainer;\r\n","import './App.css';\r\nimport ToDoListWrapperContainer from './components/ToDoListWrapper/ToDoListWrapperContainer';\r\nimport store from './store';\r\nimport React from \"react\";\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <div className=\"App\">\r\n        <ToDoListWrapperContainer store={store} />\r\n      </div>\r\n    </BrowserRouter >\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}